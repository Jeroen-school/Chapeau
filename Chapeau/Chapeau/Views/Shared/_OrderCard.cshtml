@model Chapeau.Models.Order
@using Chapeau.Models.Enums

<div class="d-flex justify-content-between mb-2">
    <div>
        <p class="h2">Table @Model.Table.TableNr</p>
    </div>
    <div class="text-end">
        <p>@Model.Time_ordered.ToString("HH:mm")</p>
        <p>Waiter: @Model.Employee.FirstName</p>
    </div>
</div>

@foreach (var group in Model.OrderItems.OrderBy(i => i.MenuItem.CourseCategory).GroupBy(i => i.MenuItem.CourseCategory))
{
    <div class="mb-2">
        <div class="d-flex justify-content-between border-bottom">
            <strong>@group.Key</strong>
            <span class="check-icon">✔</span>
        </div>
        <ul class="list-unstyled ms-2 mt-1">
            @foreach (var item in group)
            {
                <li>@item.Count @item.MenuItem.Name</li>
            }
        </ul>
    </div>
}

<div class="mt-auto d-flex justify-content-between align-items-center pt-2 border-top">
    <span class="badge bg-@GetStatusColor(Model.Status)">@Model.Status</span>
    <div class="text-end">
        <p>@Model.MinutesSinceOrdered min</p>
    </div>
</div>

<button class="btn btn-sm bg-@GetStatusColor(Model.Status) bg-opacity-75 status-btn"
        onclick="update
        
        
        
        
        (@Model.OrderId, '@Model.Status.ToString()')">
    @ChangeStatusName(Model.Status)
</button>

@functions {
    string GetStatusColor(Status status)
    {
        return status switch
        {
            Status.Ready => "secondary",
            Status.Preparing => "success",
            Status.Ordered => "primary",
            _ => "dark"
        };
    }

    string ChangeStatusName(Status status)
    {
        return status switch
        {
            Status.Ready => "UNDO",
            Status.Preparing => "DONE",
            Status.Ordered => "START PREPARING",
            _ => ""
        };
    }
}
