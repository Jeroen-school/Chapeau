@model Chapeau.Models.Order
@using Chapeau.Models.Enums
@using Chapeau.Models

<div class="d-flex justify-content-between mb-2">
    <div>
        <p class="h2">Table @Model.Table.TableNr</p>
    </div>
    <div class="text-end">
        <p>@Model.Time_ordered.ToString("HH:mm")</p>
        <p>Waiter: @Model.Employee.FirstName</p>
    </div>
</div>

@foreach (var group in Model.OrderItems.OrderBy(i => i.MenuItem.CourseCategory).GroupBy(i => i.MenuItem.CourseCategory))
{
    <div class="mb-2">
        <div class="d-flex justify-content-between border-bottom">
            <strong>@group.Key</strong>
            @if(group.Any(i => i.Status == Status.Preparing))
            {
                <button class="btn btn-sm"
                        onclick="UpdateOrderCategoryStatus(@Model.OrderId, '@group.Key.ToString()', '@Model.Status.ToString()')">
                    <span class="check-icon">✔</span>
                </button>
            }
        </div>
        <ul class="list-unstyled ms-2 mt-1">
            @foreach (var item in group)
            {
                <div class="d-flex justify-content-between">
                    @if (item.Status == Status.Preparing)
                    {
                        <li>@item.Count @item.MenuItem.Name</li>
                        <button class="btn btn-sm"
                        onclick="UpdateOrderItemStatus(@item.OrderItemId, '@Model.Status.ToString()')">
                            <span class="check-icon">✔</span>
                        </button>
                    }
                    else if (item.Status > Status.Preparing)
                    {
                        <li class="text-decoration-line-through">@item.Count @item.MenuItem.Name</li>
                    }
                    else
                    {
                        <li>@item.Count @item.MenuItem.Name</li>
                    }
                </div>
            }
        </ul>
        <button class="btn btn-sm"
                onclick="updateCourseStatus(@group., '@Model.Status.ToString()')">
        </button>
    </div>
}

<div class="mt-auto d-flex justify-content-between align-items-center pt-2 border-top">
    <p>#@Model.OrderId</p>
    <div class="text-end">
        <p>
            @Model.MinutesSinceOrdered min
        </p>
    </div>
</div>

<button class="btn btn-sm bg-@StatusDisplayHelper.GetStatusColor(Model.Status) bg-opacity-75 status-btn"
        onclick="UpdateOrderStatus(@Model.OrderId, '@Model.Status.ToString()' )">
        @StatusDisplayHelper.ChangeStatusName(Model.Status)
</button>

<script>
    setTimeout(() => location.reload(), 60000); // Reload page every 60 seconds
</script>


