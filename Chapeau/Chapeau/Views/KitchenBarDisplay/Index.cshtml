@using Chapeau.Enums
@model List<Chapeau.Models.DisplayOrder>
@{
    ViewData["Title"] = "Kitchen";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="mb-0">Kitchen Display</h1>
        <ul class="nav nav-tabs custom-tabs mb-4">
            <li class="nav-item">
                <a class="nav-link btn btn-outline-dark me-2 @(Context.Request.Query["course_category"] != "drinks" ? "active" : "")" asp-action="Index">Kitchen</a>
            </li>
            <li class="nav-item">
                <a class="nav-link btn btn-outline-dark me-2 @(Context.Request.Query["course_category"] == "drinks" ? "active" : "")" asp-action="Index">Bar</a>
            </li>
        </ul>
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs custom-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link @(Context.Request.Query["status"].Count == 0 ? "active" : "")" asp-action="Index">All orders</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Context.Request.Query["status"] == "Preparing" ? "active" : "")" asp-action="Index" asp-route-status="Preparing">Active</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Context.Request.Query["status"] == "Served" ? "active" : "")" asp-action="Index" asp-route-status="Served">Completed</a>
        </li>
    </ul>

    <!-- Orders -->
    <div class="row g-4">
        @foreach (var order in Model)
        {
            <div class="col-md-4">
                <div class="card order-card h-100">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between mb-2">
                            <div>
                                <p class="h2">Table @order.Table_id</p>
                            </div>
                            <div class="text-end">
                                <p>@order.Time_ordered.ToString("HH:mm")</p>
                                <p>Waiter: @order.Employee_name</p>
                            </div>
                        </div>

                        @foreach (var group in order.OrderItems.GroupBy(i => i.CourseCategory))
                        {
                            <div class="mb-2">
                                <div class="d-flex justify-content-between border-bottom">
                                    <strong>@group.Key</strong>
                                    <span class="check-icon">✔</span>
                                </div>
                                <ul class="list-unstyled ms-2 mt-1">
                                    @foreach (var item in group)
                                    {
                                        <li>@item.Count x @item.Name</li>
                                    }
                                </ul>
                            </div>
                        }

                        <div class="mt-auto d-flex justify-content-between align-items-center pt-2 border-top">
                            <div class="text-muted small">
                                <p>#@order.Order_id •</p>
                            </div>
                            <div class="text-end">
                                <p>@order.MinutesSinceOrdered min</p>
                            </div>
                        </div>
                        <button class="btn btn-sm bg-@GetStatusColor(order.Status) status-btn">
                            @order.Status.ToString().ToUpper()
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetStatusColor(Status status)
    {
        return status switch
        {
            Status.Served => "success",
            Status.Preparing => "warning",
            Status.Ready => "secondary",
            _ => "dark"
        };
    }
}
