@model List<Chapeau.Models.Order>
@using Chapeau.Models.Enums
@{
    ViewData["Title"] = "Orders";
    var currentFilter = ViewBag.CurrentFilter as string ?? "active";
    var tableFilter = ViewBag.FilteredByTable as int?;
    var availableTableNumbers = ViewBag.AvailableTableNumbers as List<int> ?? new List<int>();
}


<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fs-4 fs-md-1">Orders</h1>
        <a asp-controller="Waiter" asp-action="Tables" class="btn btn-primary btn-sm">
            <i class="bi bi-grid-3x3"></i> <span class="d-none d-sm-inline">Back to</span> Tables
        </a>
    </div>

    <!-- Main Filter Tabs -->
    <div class="order-tabs-wrapper mb-3">
        <ul class="nav nav-tabs order-tabs">
            <li class="nav-item">
                <a class="nav-link @(currentFilter == "active" && !tableFilter.HasValue ? "active" : "")"
                   asp-action="Orders" asp-route-filter="active">
                    <i class="bi bi-clock me-1"></i>Active
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentFilter == "ready" && !tableFilter.HasValue ? "active" : "")"
                   asp-action="Orders" asp-route-filter="ready">
                    <i class="bi bi-check-circle me-1"></i>Ready
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(currentFilter == "all" && !tableFilter.HasValue ? "active" : "")"
                   asp-action="Orders" asp-route-filter="all">
                    <i class="bi bi-list me-1"></i>All
                </a>
            </li>
        </ul>
    </div>

    <!-- Table Filter Buttons -->
    @if (availableTableNumbers.Any())
    {
        <div class="table-filter-buttons mb-3">
            <div class="d-flex flex-wrap gap-2 align-items-center">
                <small class="text-muted me-2 fw-semibold">Filter by table:</small>
                @foreach (var tableNumber in availableTableNumbers)
                {
                    <a class="btn btn-sm table-filter-btn @(tableFilter == tableNumber ? "active" : "")"
                       asp-action="Orders" asp-route-filter="@currentFilter" asp-route-tableNr="@tableNumber">
                        T@(tableNumber)
                    </a>
                }
                @if (tableFilter.HasValue)
                {
                    <a class="btn btn-sm btn-outline-secondary ms-2"
                       asp-action="Orders" asp-route-filter="@currentFilter">
                        <i class="bi bi-x"></i> Clear
                    </a>
                }
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center">
            <i class="bi bi-inbox" style="font-size: 3rem;"></i>
            <p class="mt-2 mb-0">
                @if (tableFilter.HasValue)
                {
                    <text>No orders found for Table @tableFilter with the current filter.</text>
                }
                else
                {
                    @switch (currentFilter)
                    {
                        case "active":
                            <text>No active orders found.</text>
                            break;
                        case "ready":
                            <text>No orders with ready items found.</text>
                            break;
                        default:
                            <text>No orders found.</text>
                            break;
                    }
                }
            </p>
        </div>
    }
    else
    {
        <!-- Mobile View - Cards -->
        <div class="d-block d-lg-none">
            @foreach (var order in Model)
            {
                <div class="order-card mb-3">
                    <div class="order-card-header">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h5 class="mb-1">Order #@order.OrderId</h5>
                                <span class="badge bg-@GetStatusColor(order.Status)">
                                    @order.Status.ToString().ToUpper()
                                </span>
                            </div>
                            <div class="text-end">
								<a asp-action="Orders" asp-route-filter="@currentFilter" asp-route-tableNr="@order.Table.TableNr"
                                   class="text-decoration-none fs-5">
                                    <i class="bi bi-square-fill"></i> @order.Table.TableNr
                                </a>
                                <div class="text-muted small">@order.Time_ordered.ToString("HH:mm")</div>
                                <div class="text-muted small">@order.MinutesSinceOrdered min ago</div>
                            </div>
                        </div>
                    </div>

                    <div class="order-card-body">
                        @foreach (var group in order.OrderItems.GroupBy(i => i.MenuItem.CourseCategory))
                        {
                            <div class="mb-2">
                                <strong>@group.Key:</strong>
                                <ul class="list-unstyled ms-3 mb-0">
                                    @foreach (var item in group)
                                    {
                                        <li class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <span>@item.Count× @item.MenuItem.Name</span>
                                                @if (!string.IsNullOrWhiteSpace(item.Comment))
                                                {
                                                    <div class="mt-1">
                                                        <small class="text-muted">
                                                            <i class="bi bi-chat-left-text me-1"></i>
                                                            <em>@item.Comment</em>
                                                        </small>
                                                    </div>
                                                }
                                            </div>
                                            <span class="badge bg-@GetItemStatusColor(item.Status) badge-sm">
                                                @item.Status.ToString()
                                            </span>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                        <div class="mt-2 text-muted small">
							<i class="bi bi-person"></i> @order.Employee.FirstName @order.Employee.LastName
                        </div>
                    </div>

                    <div class="order-card-footer">
                        <div class="d-grid gap-2">
                            @if (order.Status == Status.Ready)
                            {
                                <button class="btn btn-success btn-sm">
                                    <i class="bi bi-check-circle"></i> Mark as Served
                                </button>
                            }
                            @if (order.Status == Status.Served)
                            {
                                <a class="btn btn-primary btn-sm" asp-controller="Payment"
                                   asp-action="Index" asp-route-orderId="@order.OrderId">
                                    <i class="bi bi-credit-card"></i> Process Payment
                                </a>
                            }
                            <button class="btn btn-outline-secondary btn-sm" type="button"
                                    data-bs-toggle="collapse" data-bs-target="#order-actions-@order.OrderId">
                                More Actions <i class="bi bi-chevron-down"></i>
                            </button>
                            <div class="collapse" id="order-actions-@order.OrderId">
                                <div class="d-grid gap-2 mt-2">
                                    <button class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-eye"></i> View Details
                                    </button>
                                    <button class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-x-circle"></i> Cancel Order
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Desktop View - Table -->
        <div class="d-none d-lg-block">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Order #</th>
                            <th>Table</th>
                            <th>Time</th>
                            <th>Items & Status</th>
                            <th>Order Status</th>
                            <th>Waiter</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>#@order.OrderId</td>
                                <td>
                                    <a asp-action="Orders" asp-route-filter="@currentFilter" asp-route-tableNr="@order.Table.TableNr"
                                       class="text-decoration-none">
                                        <i class="bi bi-square-fill"></i> Table @order.Table.TableNr
                                    </a>
                                </td>
                                <td>
                                    @order.Time_ordered.ToString("HH:mm")
                                    <br>
                                    <small class="text-muted">@order.MinutesSinceOrdered min ago</small>
                                </td>
                                <td>
                                    @foreach (var group in order.OrderItems.GroupBy(i => i.MenuItem.CourseCategory))
                                    {
                                        <div class="mb-2">
                                            <strong>@group.Key:</strong>
                                            <ul class="list-unstyled ms-2 mb-0">
                                                @foreach (var item in group)
                                                {
                                                    <li class="d-flex justify-content-between align-items-start">
                                                        <div class="flex-grow-1">
                                                            <span class="item-name">@item.Count× @item.MenuItem.Name</span>
                                                            @if (!string.IsNullOrWhiteSpace(item.Comment))
                                                            {
                                                                <div class="mt-1">
                                                                    <small class="text-muted">
                                                                        <i class="bi bi-chat-left-text me-1"></i>
                                                                        <em>@item.Comment</em>
                                                                    </small>
                                                                </div>
                                                            }
                                                        </div>
                                                        <span class="badge bg-@GetItemStatusColor(item.Status) badge-sm ms-2">
                                                            @item.Status.ToString()
                                                        </span>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-@GetStatusColor(order.Status)">
                                        @order.Status.ToString().ToUpper()
                                    </span>
                                </td>
                                <td>@order.Employee.FirstName<br><small class="text-muted">@order.Employee.LastName</small></td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-sm btn-outline-primary dropdown-toggle"
                                                data-bs-toggle="dropdown" aria-expanded="false">
                                            Actions
                                        </button>
                                        <ul class="dropdown-menu">
                                            @if (order.Status == Status.Ready)
                                            {
                                                <li>
                                                    <a class="dropdown-item" href="#">
                                                        <i class="bi bi-check-circle"></i> Mark as Served
                                                    </a>
                                                </li>
                                            }
                                            @if (order.Status == Status.Served)
                                            {
                                                <li>
                                                    <a class="dropdown-item" asp-controller="Payment"
                                                       asp-action="Index" asp-route-orderId="@order.OrderId">
                                                        <i class="bi bi-credit-card"></i> Process Payment
                                                    </a>
                                                </li>
                                            }
                                            <li>
                                                <a class="dropdown-item" href="#">
                                                    <i class="bi bi-eye"></i> View Details
                                                </a>
                                            </li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <a class="dropdown-item text-danger" href="#">
                                                    <i class="bi bi-x-circle"></i> Cancel Order
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusColor(Status status)
    {
        return status switch
        {
            Status.Ordered => "info",
            Status.Preparing => "warning",
            Status.Ready => "success",
            Status.Served => "secondary",
            Status.Completed => "primary",
            Status.Cancelled => "danger",
            _ => "dark"
        };
    }

    string GetItemStatusColor(Status status)
    {
        return status switch
        {
            Status.Ordered => "info",
            Status.Preparing => "warning",
            Status.Ready => "success",
            Status.Served => "secondary",
            Status.Completed => "primary",
            Status.Cancelled => "danger",
            _ => "secondary"
        };
    }
}
